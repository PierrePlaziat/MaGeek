name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout 1
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      # - name: Cache NuGet packages
        # uses: actions/cache@v3
        # with:
          # path: ~/.nuget/packages
          # key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln') }}
          # restore-keys: |
            # ${{ runner.os }}-nuget-

      # - name: Clear NuGet Cache
        # run: dotnet nuget locals all --clear

      - name: Restore Packages
        run: |
          dotnet restore VsProject/MaGeek.sln --runtime win-x64

      # - name: Inspect .NET Environment
        # run: |
          # dotnet --list-sdks
          # dotnet --list-runtimes

      - name: Build Solution
        run: |
          msbuild VsProject/MaGeek.sln /t:Rebuild /p:Configuration=Release



  release:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout 2
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Release v1.0.${{ github.run_number }}"
          body: "Automated release of the .NET app setup files."
          draft: false
          prerelease: false

      - name: Wait for Build Artifacts
        run: |
          sleep 2 # Wait for a few seconds
          

      - name: List Files in Workspace
        run: dir D:\a\MaGeek\MaGeek\MageekSetup\Release

      - name: Upload Setup Files
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: D:\a\MaGeek\MaGeek\MageekSetup\Release\MageekSetup.msi  
          asset_name: setup.msi
          asset_content_type: application/octet-stream

      - name: Upload EXE File (if present)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: D:\a\MaGeek\MaGeek\MageekSetup\Release\setup.exe 
          asset_name: setup.exe
          asset_content_type: application/octet-stream