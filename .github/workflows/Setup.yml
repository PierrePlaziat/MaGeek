name: Build and Publish

on:
  push:
    branches:
      - main
      
permissions:
  contents: write
  
jobs:
  build:
    runs-on: windows-latest

    steps:
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Clear NuGet Cache
        run: dotnet nuget locals all --clear

      - name: Restore
        run: |
          dotnet restore VsProject/MaGeek.sln --runtime win-x64

      - name: Build
        run: |
          msbuild "D:\a\MaGeek\MaGeek\VsProject\MaGeek.sln" /t:Rebuild /p:Configuration=Release

      - name: Output
        run: |
          mkdir D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs

      - name: MageekServer
        run: |
          robocopy D:\a\MaGeek\MaGeek\VsProject\Core\MageekServer\bin\Release\net8.0 D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs /E
          if ($LASTEXITCODE -le 8) { exit 0 } else { exit $LASTEXITCODE }

      - name: MageekDesktopClient
        run: |
          robocopy D:\a\MaGeek\MaGeek\VsProject\Apps\MageekDesktopClient\bin\Release\net_.0-windows D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs /E
          if ($LASTEXITCODE -le 8) { exit 0 } else { exit $LASTEXITCODE }

      - name: MageekDesktopServer
        run: |
          robocopy D:\a\MaGeek\MaGeek\VsProject\Apps\MageekDesktopServer\bin\Release\net_.0-windows7.0 D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs /E
          if ($LASTEXITCODE -le 8) { exit 0 } else { exit $LASTEXITCODE }

      - name: Zip
        run: |
          Compress-Archive -Path D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs\* -DestinationPath D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs.zip

      # - name: Check Token
        # run: |
          # curl -H "Authorization: token ${{ secrets.DEPLOYTOKEN }}" https://api.github.com/user/repos
        # env:
          # DEPLOYTOKEN: ${{ secrets.DEPLOYTOKEN }}  # Ensure to use the correct secret name

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYTOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Release v1.0.${{ github.run_number }}"
          body: "Automated release of MaGeek"
          draft: false
          prerelease: false

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: D:\a\MaGeek\MaGeek\VsProject\bin\Release\MergedOutputs.zip
          asset_name: MaGeek.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYTOKEN }}  # Use the default GITHUB_TOKEN
